<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>Thomas Kappler</title>
    <link>/</link>
    <description>Thomas Kappler.</description>
    <language>en</language>
    <docs>http://blogs.law.harvard.edu/tech/rss</docs>
    <generator>blosxom/2.1.2</generator>

  <item>
    <title>Book: Confessions of a Public Speaker by Scott Berkun</title>
    <link>/2011/03/20#2011-03-20_review_confessions_of_a_public_speaker</link>
    <description>&lt;p&gt;Scott Berkun is a former software engineer now earning his money as
author and public speaker. This is an interesting career path, and in
this book Berkun tells the story of how he got into public speaking
and what he picked up on the long road of mastering this skill.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.scottberkun.com/books/the-book-confessions-of-a-public-speaker/&quot;&gt;Confessions&lt;/a&gt;
is a book on public speaking, but not in a reference or text book kind
of way. In the author&amp;#8217;s own words, it&amp;#8217;s &amp;#8220;highly personal and
opinionated&amp;#8221;.&lt;/p&gt;

&lt;p&gt;Berkun mostly builds the chapters around personal stories,
experiences&amp;#8212;good and bad&amp;#8212;he had when speaking, and the lessons
learned from these experiences. While there are also plenty of
literature references to back up some claims, the meat of the book is
in this personal approach. And indeed, after reading this book one
gets the impression that this approach is essential, because in the
end successful public speaking is measured by the degree to which the
speaker emotionally captures the audience. Beyond listing tricks and
guidelines to slide design, although he touches on these subjects,
Berkun focuses on capturing the audience.&lt;/p&gt;

&lt;p&gt;Below you&amp;#8217;ll find notes and brief summaries I made for most of the
chapters. If you&amp;#8217;re interested in the subject or if you simply need to
present once in a while, I strongly recommend reading the book.&lt;/p&gt;

&lt;p&gt;With &lt;em&gt;I Can&amp;#8217;t See You Naked&lt;/em&gt;, Berkun starts off with a chapter to put
you at ease: no one cares as much as you do when things go
wrong. People care and remember when it went right. It&amp;#8217;s a long
learning process to become good at presenting, and Berkun remarks &amp;#8220;if
you&amp;#8217;d like to be good at something, the first thing to go out the
window is the notion of perfection&amp;#8221;. Perfection stops you from
learning and taking chances. Be yourself and be useful, with the
mistakes you make.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Attack Of The Butterflies&lt;/em&gt; deals with being afraid of the
stage. Being nervous when facing a crowd is built in to humans through
evolution and there&amp;#8217;s nothing you can do about that.  But fear is also
good because it focuses attention. All interesting things in life come
with fears: asking the cute girl for a date, applying for a job,
writing a novel.&lt;/p&gt;

&lt;p&gt;So what to do to make that fear manageable and even useful? Practice a
lot. By actually standing up and imagining a crowd and
presenting. Apart from improving the presentation, it makes you
comfortable and alerts to potential problems. Also, on the day of the
talk, arrive early and get accustomed to the room and the tech.&lt;/p&gt;

&lt;p&gt;The chapter &lt;em&gt;$30,000 An Hour&lt;/em&gt; explains the lecture circuit and the
economics of public speaking. Since it&amp;#8217;s not a goal of mine to earn
money by speaking, it wasn&amp;#8217;t that relevant to me, but has some
interesting information. There&amp;#8217;s a list of exemplary fees for a
one-hour lecture, topped by Bill Clinton at $150,000+.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;How To Work A Tough Room&lt;/em&gt; is actually about the room! Berkun says its
importance is vastly underestimated and calls for more real theaters.
He presents his density theory: that not the absolute size of the
crowd matters, but its density. Facing a mostly empty room, do what
you can to make them come forward. Offer rewards!&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Do Not Eat The Microphone&lt;/em&gt; is titled after the expression meaning the
moment when the audience&amp;#8217;s confidence in having its needs met is lost,
and people stop listening. How to avoid that? Berkun says, besides
following the more technical basics of good presentations, the key is
in thinking your talk through thoroughly. &amp;#8220;All good public speaking is
based on good private thinking&amp;#8221;. Berkun fights the myth of spontaneous
inspiration&amp;#8212;good public speeches are the product of lots of work and
practice.&lt;/p&gt;

&lt;p&gt;Of course you also need to get your deep thoughts across. Prepare
doing four things: 1. take a strong position in the title, 2. think
carefully about your audience, 3. make your points as concise as
possible, and 4. know likely counterarguments.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Science Of Not Boring People&lt;/em&gt; goes deeper into some techniques to
ensure keeping the audience with you. This highly useful chapter
covers pacing and rhythm, story telling, involving the audience, and
other subjects.  .&lt;/p&gt;

&lt;p&gt;At some point you&amp;#8217;ll have given a few presentations, and like in every
other field,
&lt;a href=&quot;/2011-02-06_review_talent_is_overrated.html&quot;&gt;feedback is the key to improve&lt;/a&gt;. Berkun gives tips on what questions to ask
your audience as well as on practicing by yourself at home.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;The Clutch Is Your Friend&lt;/em&gt; gives extra advice for lectures where the
goal is to actually teach the audience something, as opposed to, for
instance, merely giving an overview of a topic or a motivational
speech. The alternate title is &amp;#8220;Why Teaching Is Almost Impossible&amp;#8221;&amp;#8212;in
Berkun&amp;#8217;s view, given the difficulties in teaching a large group of
people effectively, you can only prepare and follow a few simple rules
and hope for the best. The rules: small numbers win, make it active
and interesting, and start with an insight that interests the
students.&lt;/p&gt;

&lt;p&gt;With &lt;em&gt;Confessions&lt;/em&gt;, a great and funny chapter ends the book: Berkun
confesses some tricks he uses and some thoughts going through his mind
frequently when speaking. You learn that everything is allowed as long
as you capture your audience, and after all, &amp;#8220;the easiest way to be
interesting is to be honest&amp;#8221;. If you want to know if Berkun wears
underwear when giving a talk, read this chapter.&lt;/p&gt;

&lt;p&gt;The book has several useful appendixes with concise extra information,
such as How To Make A Point. Also, the references are great. To keep
in mind: Donald A. Bligh, &lt;em&gt;What&amp;#8217;s the Use of Lectures&lt;/em&gt;, and Ken Bain,
&lt;em&gt;What the Best College Teachers Do&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;As I said before, a great book, recommended without hesitation.&lt;/p&gt;
</description>
  </item>
  <item>
    <title>Overriding Blosxom&amp;#8217;s Time Stamping</title>
    <link>/2011/03/20#2011-03-20_overriding_blosxoms_mtime</link>
    <description>&lt;p&gt;&lt;a href=&quot;http://blosxom.sourceforge.net/&quot;&gt;Blosxom&lt;/a&gt;, the Perl blog engine
powering this site, is amazingly flexible due to its plugin
architecture. But one aspect of its behavior is not customizable
through a plugin: it determines an article&amp;#8217;s date by the time of the
last modification (&lt;code&gt;mtime&lt;/code&gt;) of the file containing it.&lt;/p&gt;

&lt;p&gt;I wanted the ability to date files to arbitrary points in time, since
I sometimes write up things I did or saw long after the fact. Also, I
didn&amp;#8217;t like that editing a published article pushes it to the front
again.&lt;/p&gt;

&lt;p&gt;Instead, I wanted Blosxom to take an article&amp;#8217;s date from its file
name. I follow a consistent naming scheme where each article is in a
file named &lt;code&gt;year-month-day_title&lt;/code&gt;. After parsing the date at the
beginning, we can use &lt;code&gt;DateTime&lt;/code&gt; to construct a fake &lt;code&gt;mtime&lt;/code&gt; based on
the result. If the parsing fails, we fall back to Blosxom&amp;#8217;s standard
routine. Here&amp;#8217;s the patch.&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;--- blosxom.cgi.orig    2011-03-20 10:33:29.002204071 +0100
+++ blosxom.cgi.mtime   2011-03-20 10:41:30.718204071 +0100
@@ -404,8 +404,35 @@
                 )
             {

+                # thomas11: save the regex matched groups in variables
+                # to preserve them from future regex matches and for
+                # readability.
+                my &amp;#036;path = &amp;#036;1;
+                my &amp;#036;file_basename = &amp;#036;2;
+
+                # thomas11: Use the date in the file name, as in
+                # 2011-03-13_title, rather than the actual file mtime. I
+                # sometimes publish articles long after writing the
+                # initial version.
+                my &amp;#036;mtime;
+                if (&amp;#036;File::Find::name =~ /(\d{4})-(\d{2})-(\d{2})_.+/) {
+                    my (&amp;#036;year, &amp;#036;month, &amp;#036;day) = (&amp;#036;1, &amp;#036;2, &amp;#036;3);
+                    use DateTime;
+                    my &amp;#036;dt = DateTime-&amp;gt;new(
+                        year       =&amp;gt; &amp;#036;year,
+                        month      =&amp;gt; &amp;#036;month,
+                        day        =&amp;gt; &amp;#036;day,
+                        hour       =&amp;gt; 0,
+                        minute     =&amp;gt; 0,
+                        second     =&amp;gt; 0,
+                        nanosecond =&amp;gt; 0,
+                        time_zone  =&amp;gt; &apos;Europe/Zurich&apos;,
+                      );
+                    &amp;#036;mtime = &amp;#036;dt-&amp;gt;epoch();
+                } else {
                 # read modification time
-                my &amp;#036;mtime = stat(&amp;#036;File::Find::name)-&amp;gt;mtime or return;
+                    &amp;#036;mtime = stat(&amp;#036;File::Find::name)-&amp;gt;mtime or return;
+                }

                 # to show or not to show future entries
                 return unless ( &amp;#036;show_future_entries or &amp;#036;mtime &amp;lt; time );
@@ -415,15 +442,15 @@

                 # static rendering bits
                 my &amp;#036;static_file
-                    = &quot;&amp;#036;static_dir/&amp;#036;1/index.&quot; . &amp;#036;static_flavours[0];
+                    = &quot;&amp;#036;static_dir/&amp;#036;path/index.&quot; . &amp;#036;static_flavours[0];
                 if (   param(&apos;-all&apos;)
                     or !-f &amp;#036;static_file
                     or stat(&amp;#036;static_file)-&amp;gt;mtime &amp;lt; &amp;#036;mtime )
                 {
-                    &amp;#036;indexes{&amp;#036;1} = 1;
+                    &amp;#036;indexes{&amp;#036;path} = 1;
                     &amp;#036;d = join( &apos;/&apos;, ( nice_date(&amp;#036;mtime) )[ 5, 2, 3 ] );
                     &amp;#036;indexes{&amp;#036;d} = &amp;#036;d;
-                    &amp;#036;indexes{ ( &amp;#036;1 ? &quot;&amp;#036;1/&quot; : &apos;&apos; ) . &quot;&amp;#036;2.&amp;#036;file_extension&quot; } = 1
+                    &amp;#036;indexes{ ( &amp;#036;path ? &quot;&amp;#036;path/&quot; : &apos;&apos; ) . &quot;&amp;#036;file_basename.&amp;#036;file_extension&quot; } = 1
                         if &amp;#036;static_entries;
                 }
             }&lt;/code&gt;&lt;/pre&gt;
</description>
  </item>
  </channel>
</rss>
