<?xml version="1.0" encoding="UTF-8"?> <feed xmlns="http://www.w3.org/2005/Atom">
  <title>Thomas Kappler&#39;s site. Mostly programming and books. Category &#34;Databases.&#34;</title>
  <link href="http://www.thomaskappler.net/..\thomas11.github.com\categories/Databases/" rel="alternate"></link>
  <id>http://www.thomaskappler.net/..\thomas11.github.com\categories/Databases/</id>
  <updated>2020-07-26T21:17:25-07:00</updated>
  <author>
   <name>Thomas Kappler</name>
   <uri>http://www.thomaskappler.net/</uri>
  </author>
  <entry>
   <title>Riak and Neo4j @zhgeeks</title>
   <link href="http://www.thomaskappler.net/2013-05-23_riak_and_neo4j_zhgeeks2.html" rel="alternate"></link>
   <updated>2013-05-23T00:00:00Z</updated>
   <id>tag:www.thomaskappler.net,2013-05-23:/2013-05-23_riak_and_neo4j_zhgeeks2.html</id>
   <summary type="html">We had two great zhgeeks meetups recently: Sean Cribbs spoke about Riak and eventual consistency, and Jim Webber presented Neo4j. Sean&#39;s talk was also an intro to distributed systems with a list of foundational papers that I list in this post.</summary>
   <content type="html">&lt;p&gt;This past April we at &lt;a href=&#34;http://www.meetup.com/zhgeeks/&#34;&gt;zhgeeks&lt;/a&gt; had&#xA;the opportunity to host two great database-centric meetups.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As an aside, I can now say &amp;ldquo;we&amp;rdquo; because&#xA;&lt;a href=&#34;https://twitter.com/al_maisan&#34;&gt;Muharem Hrnjadovic&lt;/a&gt;, founder and&#xA;organizer of zhgeeks, added me as a co-organizer. Make no mistake, I&#xA;didn&amp;rsquo;t do much so far and all credit for zhgeeks goes to Muharem. I&#xA;will get more involved in organizing future meetups, though. We have a&#xA;couple of good ideas, by the way, so stay tuned!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;First, &lt;a href=&#34;http://jimwebber.org/&#34;&gt;Jim Webber&lt;/a&gt;, Chief Scientist at&#xA;&lt;a href=&#34;http://www.neotechnology.com/&#34;&gt;Neo Technology&lt;/a&gt;, presented&#xA;&lt;a href=&#34;http://www.meetup.com/zhgeeks/events/97436192/&#34;&gt;Neo4j and connected data&lt;/a&gt;.&#xA;This was a relatively high-level talk where Jim spent the first half&#xA;or so on pointing out use cases for graph databases and the problem&#xA;domains for which they are best suited---not surprisingly, domains&#xA;with highly interconnected data. Later on Jim showed Neo4J&amp;rsquo;s new query&#xA;language Cypher, which is a very expressive textual query language for&#xA;graphs.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;img src=&#34;/static/posts/2013-05-23_riak_and_neo4j_zhgeeks2/jim webber zhgeeks.jpg&#34; /&gt;&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Jim&amp;rsquo;s a great speaker with lots of wit and plenty of humorous slides.&#xA;The audience---one of the largest we had so far at zhgeeks---was&#xA;captured.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;After Jim&amp;rsquo;s presentation we had a brief talk by Florian MÃ¼ller,&#xA;co-founder of &lt;a href=&#34;http://jooik.com/&#34;&gt;jooik&lt;/a&gt;, about how they use Neo4j in&#xA;their startup. It&amp;rsquo;s always a pleasure to hear of that kind of&#xA;real-world experience.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Later in April we had &lt;a href=&#34;http://seancribbs.com/&#34;&gt;Sean Cribbs&lt;/a&gt; from&#xA;&lt;a href=&#34;http://basho.com/&#34;&gt;Basho&lt;/a&gt;, makers of the&#xA;&lt;a href=&#34;http://basho.com/riak/&#34;&gt;Riak&lt;/a&gt; distributed database, presenting&#xA;&lt;a href=&#34;http://www.meetup.com/zhgeeks/events/107680222/&#34;&gt;Understanding Eventual Consistency and Riak&lt;/a&gt;.&#xA;This was again an awesome talk. Sean wasn&amp;rsquo;t afraid to go into some&#xA;technical details of distributed systems which I appreciated very&#xA;much. He structured the talk as a tour of some of the most influential&#xA;papers in distributed systems, pointing out how Riak implements each&#xA;technique and deals with the trade-offs involved. I found this to be a&#xA;great overview of the field, so I made a list of the papers and&#xA;resources Sean mentioned.&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Sean recommends the&#xA;&lt;a href=&#34;http://the-paper-trail.org/blog/&#34;&gt;Paper Trail&lt;/a&gt; blog by Henry&#xA;Robinson that has great write-ups on important topics in&#xA;distributed systems.&lt;/li&gt;&#xA;&lt;li&gt;Fischer, Lynn, Patterson 1985:&#xA;&lt;a href=&#34;http://cs-www.cs.yale.edu/homes/arvind/cs425/doc/fischer.pdf&#34;&gt;Impossibility of Distributed Consensus with One Faulty Process (pdf)&lt;/a&gt;&#xA;introduces the &amp;ldquo;FLP impossiblity&amp;rdquo;: in an asynchronous setting&#xA;there is no distributed algorithm that solves the consensus&#xA;problem of several nodes agreeing on a common value. Paper Trail&#xA;has a&#xA;&lt;a href=&#34;http://the-paper-trail.org/blog/a-brief-tour-of-flp-impossibility/&#34;&gt;good post&lt;/a&gt;&#xA;on this paper.&lt;/li&gt;&#xA;&lt;li&gt;Fox, Brewer 1999:&#xA;&lt;a href=&#34;http://citeseerx.ist.psu.edu/viewdoc/download?doi=10.1.1.24.3690&amp;amp;rep=rep1&amp;amp;type=pdf&#34;&gt;Harvest, yield, and scalable tolerant systems (pdf)&lt;/a&gt;&#xA;focuses on what kind of compromises a distributed system can make&#xA;in case of node failures or partitions. Yield is the probability&#xA;of completing a request and harvest is a measure of the accuracy&#xA;of the response, defined as the fraction of the existing data the&#xA;system used to come up with the response. Coda Hale wrote a great&#xA;&lt;a href=&#34;http://codahale.com/you-cant-sacrifice-partition-tolerance/&#34;&gt;overview article on Harvest, yield and the CAP theorem&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Finally, Sean touched on Leslie Lamport&amp;rsquo;s work on safety and&#xA;liveness of distributed systems in his 1977 paper&#xA;&lt;a href=&#34;http://citeseerx.ist.psu.edu/viewdoc/summary?doi=10.1.1.137.9454&#34;&gt;Proving the Correctness of Multiprocess Programs&lt;/a&gt;.&#xA;Sean did a great job of relating Lamport&amp;rsquo;s results to currently&#xA;existing algorithms and systems. The basic question is, if you&#xA;have F failures, how many nodes that are still up do you need to&#xA;respond? If you need F + 1 (at least one), it is an eventually&#xA;consistent system. A majority of nodes, 2F + 1, corresponds to&#xA;&lt;a href=&#34;http://research.microsoft.com/users/lamport/pubs/pubs.html#paxos-simple&#34;&gt;Paxos&lt;/a&gt;&#xA;and two-phase-commit. A super majority, 3F + 1, is called&#xA;&lt;a href=&#34;http://en.wikipedia.org/wiki/Byzantine_fault_tolerance&#34;&gt;Byzantine fault tolerance&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;li&gt;Riak itself is heavily based on the&#xA;&lt;a href=&#34;http://www.allthingsdistributed.com/files/amazon-dynamo-sosp2007.pdf&#34;&gt;Amazon dynamo paper (pdf)&lt;/a&gt;.&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Finally, Sean recommended the talk&#xA;&lt;a href=&#34;http://vimeo.com/52414903&#34;&gt;data structures in Riak&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A question from the audience was what other solutions in the&#xA;bewildering space of distributed systems and databases were similar to&#xA;Riak. Among the open source ones Sean thought&#xA;&lt;a href=&#34;http://www.project-voldemort.com/voldemort/&#34;&gt;Voldemort&lt;/a&gt; to be the&#xA;closest, followed by &lt;a href=&#34;http://cassandra.apache.org/&#34;&gt;Cassandra&lt;/a&gt;.&lt;/p&gt;&#xA;</content>
   <category term="Meetups"></category>
   <category term="Databases"></category>
  </entry>
 </feed>