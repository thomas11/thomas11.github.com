<?xml version="1.0" encoding="UTF-8"?> <feed xmlns="http://www.w3.org/2005/Atom">
  <title>Thomas Kappler&#39;s site. Mostly programming and books. Category &#34;Meetups.&#34;</title>
  <link href="http://www.thomaskappler.net/categories/Meetups/" rel="alternate"></link>
  <id>http://www.thomaskappler.net/categories/Meetups/</id>
  <updated>2013-05-09T16:59:18+02:00</updated>
  <author>
   <name>Thomas Kappler</name>
   <uri>http://www.thomaskappler.net/</uri>
  </author>
  <entry>
   <title>GDG DevFest Zurich with an intro to Go</title>
   <link href="http://www.thomaskappler.net/2012-12-10_gdg_devfest_zurich.html" rel="alternate"></link>
   <updated>2012-12-10T00:00:00Z</updated>
   <id>tag:www.thomaskappler.net,2012-12-10:/2012-12-10_gdg_devfest_zurich.html</id>
   <summary type="html">The Google Developers Group Zurich organized a great weekend of talks, hacking and networking in October. Unexpectedly, I got to present Go in an hour-long hands-on tutorial.</summary>
   <content type="html">&lt;p&gt;Before October, I had never made it to a&#xA;&lt;a href=&#34;http://www.gdgzh.ch/&#34;&gt;GDG Zurich&lt;/a&gt; event, but the&#xA;&lt;a href=&#34;https://sites.google.com/site/gdgdevfestzurich/&#34;&gt;DevFest 2012&lt;/a&gt; they&#xA;announced sounded too interesting to pass it up. I don&amp;rsquo;t want to bore&#xA;you with the minutiae of how it went down, so let me just say it was a&#xA;great and very well organized weekend. By my rough guess about 100&#xA;hackers showed up, which I found quite impressive. After casual&#xA;introductions and drinks on Friday night we spent Saturday and Sunday&#xA;in the Zurich youth hostel for talks and hacking. Big thanks to the&#xA;organizers Vadim, Michel, Corsin and Robert (see&#xA;&lt;a href=&#34;https://sites.google.com/site/gdgdevfestzurich/home/orga&#34;&gt;here&lt;/a&gt;), you&#xA;did a great job.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I really enjoyed the presentations about AppEngine by Jerome Mouton&#xA;and about the new Google Drive SDK by Nicolas Garnier. Would love to&#xA;play with these at some point.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The rest of Saturday was spent chatting and getting to know people,&#xA;until at some point I mentioned working with &lt;a href=&#34;http://golang.org/&#34;&gt;Go&lt;/a&gt;&#xA;at &lt;a href=&#34;http://nhumi.com/&#34;&gt;Nhumi&lt;/a&gt; and people got very interested. Almost&#xA;everyone had read about it, but no one had used it. There happened to&#xA;be a free slot left for a codelab on Sunday morning, so I soon found&#xA;myself with a job to do.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Since I didn&amp;rsquo;t have much time I just roughly followed the&#xA;&lt;a href=&#34;http://tour.golang.org/&#34;&gt;Tour of Go&lt;/a&gt;, skipping ahead a little&#xA;sometimes. This was a good decision as the Go devs have put a lot of&#xA;thought into its structure. In addition, I made just six&#xA;&lt;a href=&#34;https://docs.google.com/presentation/d/1ZOgBTvAoveph4NneI05dV20qn7YUbQeioaEP0D8_4uU/edit?usp=sharing&#34;&gt;slides summarizing some Go essentials from my point of view&lt;/a&gt;.&#xA;This was my &amp;ldquo;main points about Go&amp;rdquo; slide:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;Fun and productive&lt;/li&gt;&#xA;&lt;li&gt;Interfaces&lt;/li&gt;&#xA;&lt;li&gt;Different &amp;ldquo;OO&amp;rdquo;: embedded structs, methods&lt;/li&gt;&#xA;&lt;li&gt;Concurrency&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;I gave a code example for each of the latter three points. The&#xA;audience of about 20 seemed to follow along easily and there were&#xA;plenty of questions. It was neat to respond to questions and remarks&#xA;directly by demonstrating things live in the&#xA;&lt;a href=&#34;http://play.golang.org/&#34;&gt;Go Playground&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Thanks everyone for coming, and have fun with Go!&lt;/p&gt;&#xA;</content>
   <category term="Go"></category>
   <category term="Presenting"></category>
   <category term="Meetups"></category>
  </entry>
  <entry>
   <title>Geneva JUG New Year&#39;s meeting 2011</title>
   <link href="http://www.thomaskappler.net/2011-01-18_geneva_jug_akka_scala.html" rel="alternate"></link>
   <updated>2011-01-18T00:00:00Z</updated>
   <id>tag:www.thomaskappler.net,2011-01-18:/2011-01-18_geneva_jug_akka_scala.html</id>
   <summary type="html">Iulian Dragos on Scala &amp; Jonas Bonér on Akka.</summary>
   <content type="html">&lt;p&gt;The &lt;a href=&#34;http://genevajug.ch/&#34;&gt;Geneva Java User&amp;rsquo;s Group&lt;/a&gt; had their annual&#xA;New Year&amp;rsquo;s meeting yesterday, with two invited speakers. Iulian Dragos&#xA;gave an Intro to Scala, and Jonas Bonér presented his actor library&#xA;&lt;a href=&#34;http://akka.io&#34;&gt;Akka&lt;/a&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Iulian works on Scala and with Scala with Martin Odersky at EPFL&#xA;Lausanne and Odersky&amp;rsquo;s consulting company Scala Solutions. For initial&#xA;motivation, he listed some companies already using Scala in&#xA;production. Apart from the ones known in the anglophone hacker web&#xA;like Twitter and Foursquare, some big European enterprises such as&#xA;Credit Suisse, UBS, and Siemens were on the list. Iulian&amp;rsquo;s&#xA;presentation was then a straightforward intro to Scala. Up to slide&#xA;13, I noted, it was all Perl in a different syntax :-) He then moved&#xA;on to more advanced features such as mix-ins. Their sensitivity to the&#xA;order in which they are included left the audience sceptical. The&#xA;parallel collections of the upcoming Scala 2.9, on the other hand,&#xA;looked great.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Overall a nice intro to Scala. It suffered a bit from lack of&#xA;practical examples for the advanced language features, but that&amp;rsquo;s&#xA;unavoidable given the time constraints. Speaker&amp;rsquo;s note: a laser&#xA;pointer would have been very helpful for going through sample code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://jonasboner.com&#34;&gt;Jonas Bonér&lt;/a&gt; is the principal author of Akka,&#xA;a very powerful actor framework written in Scala. Jonas uses Scala&#xA;since 2005. He loves Erlang and only moved on to the JVM world because&#xA;he had difficulties convincing others of its greatness. The natural&#xA;compromise was then to implement an Erlang-style platform using Scala&#xA;actors, which became Akka.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Akka is very optimized. An actor uses only 600 bytes (yes, bytes) of&#xA;memory, so you can spawn millions of them. Syntax is easy and&#xA;flexible: send a message to an actor with a single bang (&lt;code&gt;!&lt;/code&gt;), &lt;code&gt;!!&lt;/code&gt;&#xA;blocks, &lt;code&gt;!!!&lt;/code&gt; returns a &lt;code&gt;Future&lt;/code&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A unique property of Akka is that it combines actors with Software&#xA;Transactional Memory, usually regarded as two separate ideas to tackle&#xA;concurrency. You write&lt;/p&gt;&#xA;&#xA;&lt;pre&gt;&lt;code&gt;import akka.stm. ...&#xA;&#xA;atomic {&#xA;    atomic {&#xA;        // Atomic blocks are composable, so they don&#39;t break&#xA;        // encapsulation like locks.&#xA;    }&#xA;}&#xA;&lt;/code&gt;&lt;/pre&gt;&#xA;&#xA;&lt;p&gt;If you, for instance, send a message to an actor a1, which updates its&#xA;state atomically, messages another actor a2, which then also tries to&#xA;updates its state atomically but fails, then the whole chain will be&#xA;rolled back and retried, even if the messaging was&#xA;asynchronous. Powerful indeed.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Jonas presented a fascinating integration example towards the end of&#xA;this talk. He likes the Apache Camel integration framework. Akka comes&#xA;with a Camel module. One can define an actor with, for example,&#xA;&lt;code&gt;endpoint &amp;quot;file://foo&amp;quot;&lt;/code&gt;. Any change to &lt;code&gt;foo&lt;/code&gt; will then be send as a&#xA;message to the actor. The other way round works, too, of course&amp;ndash;think&#xA;websockets.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Almost as an aside, Jonas mentioned that Akka supports code hot-swap&#xA;like Erlang.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Akka looks like a very powerful framework indeed, to be investigated.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Jonas presented in a great, buddy-like way, like a fellow hacker&#xA;chatting over a beer. Some ranting and rambling only added to the&#xA;impact of the presentation. His slides were minimal and well&#xA;done&amp;ndash;great talk overall.&lt;/p&gt;&#xA;</content>
   <category term="Meetups"></category>
   <category term="Java"></category>
   <category term="Scala"></category>
  </entry>
 </feed>