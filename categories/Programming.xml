<?xml version="1.0" encoding="UTF-8"?> <feed xmlns="http://www.w3.org/2005/Atom">
  <title>Thomas Kappler&#39;s site. Mostly programming and books. Category &#34;Programming.&#34;</title>
  <link href="http://www.thomaskappler.net/categories/Programming/" rel="alternate"></link>
  <id>http://www.thomaskappler.net/categories/Programming/</id>
  <updated>2013-05-03T14:19:54+02:00</updated>
  <author>
   <name>Thomas Kappler</name>
   <uri>http://www.thomaskappler.net/</uri>
  </author>
  <entry>
   <title>&#34;The Leprechauns of Software Engineering&#34; by Laurent Bossavit</title>
   <link href="http://www.thomaskappler.net/2013-04-15_leprechauns_of_software_engineering.html" rel="alternate"></link>
   <updated>2013-04-15T00:00:00Z</updated>
   <id>tag:www.thomaskappler.net,2013-04-15:/2013-04-15_leprechauns_of_software_engineering.html</id>
   <summary type="html">An amazing little book about a deep but not widely recognized problem in software development: &#34;How folklore turns into fact and what to do about it&#34;. Strongly recommended.</summary>
   <content type="html">&lt;p&gt;I&amp;rsquo;ll let the author introduce&#xA;&lt;a href=&#34;https://leanpub.com/leprechauns&#34;&gt;the book&lt;/a&gt; himself:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;The software profession has a problem, widely recognized but which&#xA;nobody seems willing to do anything about. You can think of this&#xA;problem as a variant of the well known &amp;ldquo;telephone game&amp;rdquo;, where some&#xA;trivial rumor is repeated from one person to the next until it has&#xA;become distorted beyond recognition and blown up out of all&#xA;proportion.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Unfortunately, the objects of this telephone game are generally&#xA;considered cornerstone truths of the discipline, to the point that&#xA;their acceptance now seems to hinder further progress.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/Morendil&#34;&gt;Bossavit&lt;/a&gt; researches the origin and the&#xA;facts behind some of these cornerstone beliefs such as the 10x&#xA;variation in productivity between developers and the famous&#xA;cost-of-change curve. What he finds isn&amp;rsquo;t pretty: often, there are&#xA;hardly any facts.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Methodically, Bossavit follows reference after reference of the&#xA;publications making these widely believed claims. He shows examples of&#xA;&amp;ldquo;telephone game&amp;rdquo; where sources are misrepresented or exaggerated,&#xA;either through careless reading or through bending them into shape for&#xA;one&amp;rsquo;s own theories.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For instance, in chapter seven, &amp;ldquo;Chapter 7: Whoâ€™s Afraid of The Big&#xA;Bad Waterfall?&amp;ldquo;, Bossavit shows how the now infamous, rigid waterfall&#xA;development methodology is commonly attributed to the 1970 paper&#xA;&amp;ldquo;Managing the Development of Large Software Systems&amp;rdquo; by Winston Royce.&#xA;He shows how there are now two camps interpreting this paper quite&#xA;differently. Agile revisionists say Royce actually tried to show how&#xA;such a rigid process must fail and how an iterative and incremental&#xA;one is superior. Defenders of more structured approaches say Royce&amp;rsquo;s&#xA;process was misrepresented and, while it uses a formal lifecycle&#xA;model, is not as inflexible as it&amp;rsquo;s made out to be. The problem is,&#xA;according to Bossavit both camps are wrong. For starters, the term&#xA;&amp;ldquo;waterfall&amp;rdquo; does not appear once in Royce&amp;rsquo;s paper. Also, Royce does&#xA;affirm that he considers the sequential waterfall model sound, but&#xA;only if iterative loops are added between certain phases.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is one of those books where you could quote every other&#xA;paragraph. I was shocked by how dangerously misrepresented some&#xA;studies were in papers citing them, and gripped by Bossavit&amp;rsquo;s&#xA;methodical deconstruction of the issues. Misleading graphs get a good&#xA;treatment: &amp;ldquo;You should cultivate a reflex of always asking this&#xA;question: what does one data point on this curve represent?&amp;ldquo;.&#xA;Similarly, fishy statistics abound.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Every programmer ought to read this book to become aware of how shaky&#xA;the underpinnings of some central beliefs of our profession are. Of&#xA;course, one should not throw the baby out with the bathwater: a claim&#xA;can be true even if a particular paper supporting it is not solid.&#xA;Nevertheless, the book opened my eyes to an issue I wasn&amp;rsquo;t really&#xA;aware of before. As Bossavit says: &amp;ldquo;But we have now reached the most&#xA;pressing problem in software engineering: low standards for research&#xA;publications.&amp;rdquo; After reading his book, I must agree.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My former colleague &lt;a href=&#34;https://twitter.com/jervenbolleman&#34;&gt;Jerven&lt;/a&gt; made&#xA;me aware of this book, thanks!&#xA;&lt;a href=&#34;https://leanpub.com/leprechauns&#34;&gt;&amp;ldquo;The Leprechauns of Software Engineering&amp;rdquo;&lt;/a&gt;&#xA;is available directly from the author via Leanpub, in DRM-free&#xA;formats.&lt;/p&gt;&#xA;</content>
   <category term="Books"></category>
   <category term="Programming"></category>
  </entry>
 </feed>