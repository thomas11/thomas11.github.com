<?xml version="1.0" encoding="UTF-8"?> <feed xmlns="http://www.w3.org/2005/Atom">
  <title>Thomas Kappler&#39;s site. Mostly programming and books. Category &#34;Programming.&#34;</title>
  <link href="http://www.thomaskappler.net/..\thomas11.github.com\categories/Programming/" rel="alternate"></link>
  <id>http://www.thomaskappler.net/..\thomas11.github.com\categories/Programming/</id>
  <updated>2020-09-20T13:01:57-07:00</updated>
  <author>
   <name>Thomas Kappler</name>
   <uri>http://www.thomaskappler.net/</uri>
  </author>
  <entry>
   <title>Code noise and the magical number seven</title>
   <link href="http://www.thomaskappler.net/2020-09-20-code-noise.html" rel="alternate"></link>
   <updated>2020-09-20T00:00:00Z</updated>
   <id>tag:www.thomaskappler.net,2020-09-20:/2020-09-20-code-noise.html</id>
   <summary type="html">Why I believe small simplifications of code can have a larger impact than you might think, through reducing cognitive load.</summary>
   <content type="html">&lt;p&gt;The following is a little polished stream-of-thought inspired by &lt;a href=&#34;https://twitter.com/pbwinston/status/1294652092683096065&#34;&gt;Philip Winston&amp;rsquo;s Game Recognizes Game&lt;/a&gt;. It&amp;rsquo;s a great article about how an important finding of cognitive science applies to programming: Miller&amp;rsquo;s &lt;a href=&#34;http://psychclassics.yorku.ca/Miller/&#34;&gt;The Magical Number Seven, Plus or Minus Two&lt;/a&gt; that claims you can only handle about seven things simultaneously.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I&amp;rsquo;ve seen the following discussions crop up, mostly in code reviews, many times:&lt;/p&gt;&#xA;&#xA;&lt;ul&gt;&#xA;&lt;li&gt;&amp;ldquo;Import this package so you don&amp;rsquo;t need to use fully qualified names&amp;rdquo; - &amp;ldquo;It&amp;rsquo;s only a few uses, what&amp;rsquo;s the difference?&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;You can simplify this boolean expression&amp;rdquo; - &amp;ldquo;I could, but it&amp;rsquo;s correct and the difference in runtime is miniscule.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;You don&amp;rsquo;t need the extra message parameter &amp;lsquo;expected bla&amp;rsquo; to Assert.Equals, it&amp;rsquo;ll print a nice message by default&amp;rdquo; - &amp;ldquo;Ok, but it doesn&amp;rsquo;t hurt either.&amp;rdquo;&lt;/li&gt;&#xA;&lt;li&gt;&amp;ldquo;This comment is redundant, it describes only what the next line of code does&amp;rdquo; - &amp;ldquo;Ok, but it doesn&amp;rsquo;t hurt either.&amp;rdquo;&lt;/li&gt;&#xA;&lt;/ul&gt;&#xA;&#xA;&lt;p&gt;Spoiler alert: I&amp;rsquo;m usually person A.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In all these examples, person B is &lt;em&gt;completely correct&lt;/em&gt;. It&amp;rsquo;s not that I have found a defect in their code.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Rather, I have another reason to make these comments: reducing what I think of as &amp;ldquo;noise&amp;rdquo; when reading code. It&amp;rsquo;s on me that I often haven&amp;rsquo;t been explicit and actually told people what my reason is. I pledge to improve on this. Anyway, the reason I care about code noise is that reading code takes up a massive amount of time in a developer&amp;rsquo;s work day. Therefore, even tiny improvements add up to a real difference.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;OK, but am I not simply talking about the beaten-to-death horse of readability? Yes and no. When developers discuss readability, it&amp;rsquo;s usually about naming, factoring, grouping statements into logical stanzas, and many other factors. The noise I&amp;rsquo;m talking about here is yet another of these factors, one that I think hasn&amp;rsquo;t been discussed as often. It&amp;rsquo;s these little redundancies or extra expressions that are hardly worth mentioning. They change neither the correctness nor the factoring of the code. So why bother?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I believe we should bother - to a reasonable degree - to reduce cognitive load when reading code. As Philip outlines in his article, there is a hard biological limit to the number of things our brain can work with at a time. The larger the chunks of our program that fit within this limit, the easier and quicker we can understand it and reason about it.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;There are two ways reducing code noise reduces cognitive load.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;One way is simply due to the shrinking of code. Every simplification of code, every boolean clause and every optional argument and every word you can omit, will allow readers to parse the code faster and fit more of it into their working memory and attention spans. Mind you, I&amp;rsquo;m not advocating using shorter and more cryptic names or obscure tricks. It&amp;rsquo;s not the number of characters, it&amp;rsquo;s the number of things you need to parse.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The other way these simplifications reduce cognitive load is more important. They prevent readers &amp;ldquo;stumbling&amp;rdquo; over the code. For instance, reading a boolean expression, instead of doing this quickly and moving on, they wonder &lt;em&gt;&amp;ldquo;Wait a second, isn&amp;rsquo;t that the same as &amp;lt;simpler expression&amp;gt;? Let me read this again to make sure I haven&amp;rsquo;t missed a subtlety.&amp;rdquo;&lt;/em&gt; Reading the expression again takes only a half a minute, but now the reader&amp;rsquo;s working memory and focus have been diverted and context is lost. The total loss of time is much greater than the time it takes to read the expression again.&lt;/p&gt;&#xA;</content>
   <category term="Programming"></category>
  </entry>
 </feed>