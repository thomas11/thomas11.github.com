<?xml version="1.0" encoding="UTF-8"?> <feed xmlns="http://www.w3.org/2005/Atom">
  <title>Thomas Kappler&#39;s site. Mostly programming and books. Category &#34;Books.&#34;</title>
  <link href="http://www.thomaskappler.net/..\thomas11.github.com\categories/Books/" rel="alternate"></link>
  <id>http://www.thomaskappler.net/..\thomas11.github.com\categories/Books/</id>
  <updated>2020-07-26T21:17:25-07:00</updated>
  <author>
   <name>Thomas Kappler</name>
   <uri>http://www.thomaskappler.net/</uri>
  </author>
  <entry>
   <title>&#34;Land the Tech Job You Love&#34; by Andy Lester</title>
   <link href="http://www.thomaskappler.net/2013-06-05_review_land_the_tech_job_you_love.html" rel="alternate"></link>
   <updated>2013-06-05T00:00:00Z</updated>
   <id>tag:www.thomaskappler.net,2013-06-05:/2013-06-05_review_land_the_tech_job_you_love.html</id>
   <summary type="html">A great resource for job hunting techies, concise and full of valuable advice.</summary>
   <content type="html">&lt;p&gt;Every so often in a hacker&amp;rsquo;s life it&amp;rsquo;s time to get a new job. In my&#xA;own experience, and based on what I hear from peers, this is often a&#xA;pretty painful process. A few issues stand out for me: &amp;ldquo;selling&amp;rdquo;&#xA;yourself instead of being too shy, working your contacts, and thinking&#xA;like the hiring manager.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://petdance.com/&#34;&gt;Andy Lester&lt;/a&gt; has written a concise book of 250&#xA;pages that addresses these issues and many more:&#xA;&lt;a href=&#34;http://petdance.com/book/&#34;&gt;Land the Tech Job You Love&lt;/a&gt;. It has been a&#xA;veritable eye-opener for me.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Andy has been a software developer and open source hacker for a long&#xA;time, but he has also been hiring technical people for a long time and&#xA;so knows both sides.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The book covers the whole process of a job search from finding open&#xA;positions, preparing your resume and writing a cover letter, to&#xA;interviewing with all its subtleties. It&amp;rsquo;s more than a collection of&#xA;&amp;ldquo;do this, do that&amp;rdquo; lists, though. What impressed me most is the focus&#xA;Andy puts on attitude and on the reasons why you should do this or&#xA;that. He emphasizes shifting your thinking from focusing on yourself&#xA;to focusing on how to help the company you&amp;rsquo;re applying at and their&#xA;hiring manager. This advice guides each step in the job search and&#xA;will put you way ahead of the candidates sending out stock cover&#xA;letters and talking about what &lt;em&gt;they&lt;/em&gt; want.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I&amp;rsquo;m trying not to gush here, but I find myself hard-pressed to find&#xA;negative points. Naturally, a book like this cannot cover all&#xA;situations you might find yourself in. But it&amp;rsquo;s a great resource to&#xA;get you started and has lots of pointers to additional resources. I&#xA;find myself reaching for this book again and again, also thanks to the&#xA;plentiful examples and concise checklists.&lt;/p&gt;&#xA;</content>
   <category term="Books"></category>
   <category term="Career"></category>
  </entry>
  <entry>
   <title>The examples from Tony Hoare&#39;s 1978 paper &#34;Communicating sequential processes&#34; in Go</title>
   <link href="http://www.thomaskappler.net/2013-05-09_hoares_csp_in_go.html" rel="alternate"></link>
   <updated>2013-05-09T00:00:00Z</updated>
   <id>tag:www.thomaskappler.net,2013-05-09:/2013-05-09_hoares_csp_in_go.html</id>
   <summary type="html">Tony Hoare&#39;s &#34;Communicating sequential processes&#34; is not only a very influential Computer Science paper, but it was also a main inspiration for Go. It is full of examples written in a pseudo-code designed for the paper. I translated all these examples to Go, with unit tests.</summary>
   <content type="html">&lt;p&gt;&lt;a href=&#34;https://github.com/thomas11/csp&#34;&gt;The code is on github&lt;/a&gt; as usual. I&#xA;documented it pretty extensively, and you can&#xA;&lt;a href=&#34;http://godoc.org/github.com/thomas11/csp&#34;&gt;read the documentation&lt;/a&gt;&#xA;nicely formatted on godoc.org, so there&amp;rsquo;s not much left to say here.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The point of this exercise was not to produce something usable in&#xA;production code, but to fully understand Hoare&amp;rsquo;s paper. It&amp;rsquo;s easy to&#xA;convince yourself you understood something after reading it, but only&#xA;doing or teaching makes you fully grasp it. It was an enlightening&#xA;experience, and it&amp;rsquo;s impressive to see how far ahead of his time Hoare&#xA;was when writing this. Concurrency became a big topic outside of&#xA;academia only in the last few years.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This little project was submitted to&#xA;&lt;a href=&#34;https://news.ycombinator.com/item?id=5512600&#34;&gt;Hacker News&lt;/a&gt; and&#xA;&lt;a href=&#34;http://www.reddit.com/r/golang/comments/1bv65p/the_examples_from_tony_hoares_seminal_1978_paper/&#34;&gt;Reddit&lt;/a&gt;&#xA;(not by me) and attracted some good comments.&lt;/p&gt;&#xA;</content>
   <category term="Go"></category>
   <category term="Books"></category>
  </entry>
  <entry>
   <title>&#34;The Leprechauns of Software Engineering&#34; by Laurent Bossavit</title>
   <link href="http://www.thomaskappler.net/2013-04-15_leprechauns_of_software_engineering.html" rel="alternate"></link>
   <updated>2013-04-15T00:00:00Z</updated>
   <id>tag:www.thomaskappler.net,2013-04-15:/2013-04-15_leprechauns_of_software_engineering.html</id>
   <summary type="html">An amazing little book about a deep but not widely recognized problem in software development: &#34;How folklore turns into fact and what to do about it&#34;. Strongly recommended.</summary>
   <content type="html">&lt;p&gt;I&amp;rsquo;ll let the author introduce&#xA;&lt;a href=&#34;https://leanpub.com/leprechauns&#34;&gt;the book&lt;/a&gt; himself:&lt;/p&gt;&#xA;&#xA;&lt;blockquote&gt;&#xA;&lt;p&gt;The software profession has a problem, widely recognized but which&#xA;nobody seems willing to do anything about. You can think of this&#xA;problem as a variant of the well known &amp;ldquo;telephone game&amp;rdquo;, where some&#xA;trivial rumor is repeated from one person to the next until it has&#xA;become distorted beyond recognition and blown up out of all&#xA;proportion.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Unfortunately, the objects of this telephone game are generally&#xA;considered cornerstone truths of the discipline, to the point that&#xA;their acceptance now seems to hinder further progress.&lt;/p&gt;&#xA;&lt;/blockquote&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;https://twitter.com/Morendil&#34;&gt;Bossavit&lt;/a&gt; researches the origin and the&#xA;facts behind some of these cornerstone beliefs such as the 10x&#xA;variation in productivity between developers and the famous&#xA;cost-of-change curve. What he finds isn&amp;rsquo;t pretty: often, there are&#xA;hardly any facts.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Methodically, Bossavit follows reference after reference of the&#xA;publications making these widely believed claims. He shows examples of&#xA;&amp;ldquo;telephone game&amp;rdquo; where sources are misrepresented or exaggerated,&#xA;either through careless reading or through bending them into shape for&#xA;one&amp;rsquo;s own theories.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;For instance, in chapter seven, &amp;ldquo;Chapter 7: Whoâ€™s Afraid of The Big&#xA;Bad Waterfall?&amp;ldquo;, Bossavit shows how the now infamous, rigid waterfall&#xA;development methodology is commonly attributed to the 1970 paper&#xA;&amp;ldquo;Managing the Development of Large Software Systems&amp;rdquo; by Winston Royce.&#xA;He shows how there are now two camps interpreting this paper quite&#xA;differently. Agile revisionists say Royce actually tried to show how&#xA;such a rigid process must fail and how an iterative and incremental&#xA;one is superior. Defenders of more structured approaches say Royce&amp;rsquo;s&#xA;process was misrepresented and, while it uses a formal lifecycle&#xA;model, is not as inflexible as it&amp;rsquo;s made out to be. The problem is,&#xA;according to Bossavit both camps are wrong. For starters, the term&#xA;&amp;ldquo;waterfall&amp;rdquo; does not appear once in Royce&amp;rsquo;s paper. Also, Royce does&#xA;affirm that he considers the sequential waterfall model sound, but&#xA;only if iterative loops are added between certain phases.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is one of those books where you could quote every other&#xA;paragraph. I was shocked by how dangerously misrepresented some&#xA;studies were in papers citing them, and gripped by Bossavit&amp;rsquo;s&#xA;methodical deconstruction of the issues. Misleading graphs get a good&#xA;treatment: &amp;ldquo;You should cultivate a reflex of always asking this&#xA;question: what does one data point on this curve represent?&amp;ldquo;.&#xA;Similarly, fishy statistics abound.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Every programmer ought to read this book to become aware of how shaky&#xA;the underpinnings of some central beliefs of our profession are. Of&#xA;course, one should not throw the baby out with the bathwater: a claim&#xA;can be true even if a particular paper supporting it is not solid.&#xA;Nevertheless, the book opened my eyes to an issue I wasn&amp;rsquo;t really&#xA;aware of before. As Bossavit says: &amp;ldquo;But we have now reached the most&#xA;pressing problem in software engineering: low standards for research&#xA;publications.&amp;rdquo; After reading his book, I must agree.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;My former colleague &lt;a href=&#34;https://twitter.com/jervenbolleman&#34;&gt;Jerven&lt;/a&gt; made&#xA;me aware of this book, thanks!&#xA;&lt;a href=&#34;https://leanpub.com/leprechauns&#34;&gt;&amp;ldquo;The Leprechauns of Software Engineering&amp;rdquo;&lt;/a&gt;&#xA;is available directly from the author via Leanpub, in DRM-free&#xA;formats.&lt;/p&gt;&#xA;</content>
   <category term="Books"></category>
  </entry>
  <entry>
   <title>&#34;Confessions of a Public Speaker&#34; by Scott Berkun</title>
   <link href="http://www.thomaskappler.net/2011-03-20_review_confessions_of_a_public_speaker.html" rel="alternate"></link>
   <updated>2011-03-20T00:00:00Z</updated>
   <id>tag:www.thomaskappler.net,2011-03-20:/2011-03-20_review_confessions_of_a_public_speaker.html</id>
   <summary type="html">Excellent. A must-read if you want to improve your public speaking.</summary>
   <content type="html">&lt;p&gt;Scott Berkun is a former software engineer who changed his career to&#xA;being an author and public speaker. This is an interesting career&#xA;path, and in this book Berkun tells the story of how he got into&#xA;public speaking and what he picked up on the long road of mastering&#xA;this skill.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;a href=&#34;http://www.scottberkun.com/books/the-book-confessions-of-a-public-speaker/&#34;&gt;Confessions&lt;/a&gt;&#xA;is a book on public speaking, but not in a reference or text book kind&#xA;of way. In the author&amp;rsquo;s own words, it&amp;rsquo;s &amp;ldquo;highly personal and&#xA;opinionated&amp;rdquo;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Berkun mostly builds the chapters around personal stories,&#xA;experiences---good and bad---he had when speaking, and the lessons&#xA;learned from these experiences. While there are also plenty of&#xA;literature references to back up some claims, the meat of the book is&#xA;in this personal approach. And indeed, after reading this book one&#xA;gets the impression that this approach is essential, because in the&#xA;end successful public speaking is measured by the degree to which the&#xA;speaker emotionally captures the audience. Beyond listing tricks and&#xA;guidelines to slide design, although he touches on these subjects,&#xA;Berkun focuses on capturing the audience.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Below you&amp;rsquo;ll find notes and brief summaries I made for most of the&#xA;chapters. If you&amp;rsquo;re interested in the subject or if you simply need to&#xA;present once in a while, I strongly recommend reading the book.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With &lt;em&gt;I Can&amp;rsquo;t See You Naked&lt;/em&gt;, Berkun starts off with a chapter to put&#xA;you at ease: no one cares as much as you do when things go&#xA;wrong. People care and remember when it went right. It&amp;rsquo;s a long&#xA;learning process to become good at presenting, and Berkun remarks &amp;ldquo;if&#xA;you&amp;rsquo;d like to be good at something, the first thing to go out the&#xA;window is the notion of perfection&amp;rdquo;. Perfection stops you from&#xA;learning and taking chances. Be yourself and be useful, with the&#xA;mistakes you make.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;The Attack Of The Butterflies&lt;/em&gt; deals with being afraid of the&#xA;stage. Being nervous when facing a crowd is built in to humans through&#xA;evolution and there&amp;rsquo;s nothing you can do about that.  But fear is also&#xA;good because it focuses attention. All interesting things in life come&#xA;with fears: asking the cute girl for a date, applying for a job,&#xA;writing a novel.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;So what to do to make that fear manageable and even useful? Practice a&#xA;lot. By actually standing up and imagining a crowd and&#xA;presenting. Apart from improving the presentation, it makes you&#xA;comfortable and alerts to potential problems. Also, on the day of the&#xA;talk, arrive early and get accustomed to the room and the tech.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The chapter &lt;em&gt;$30,000 An Hour&lt;/em&gt; explains the lecture circuit and the&#xA;economics of public speaking. Since it&amp;rsquo;s not a goal of mine to earn&#xA;money by speaking, it wasn&amp;rsquo;t that relevant to me, but has some&#xA;interesting information. There&amp;rsquo;s a list of exemplary fees for a&#xA;one-hour lecture, topped by Bill Clinton at $150,000+.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;How To Work A Tough Room&lt;/em&gt; is actually about the room! Berkun says its&#xA;importance is vastly underestimated and calls for more real theaters.&#xA;He presents his density theory: that not the absolute size of the&#xA;crowd matters, but its density. Facing a mostly empty room, do what&#xA;you can to make them come forward. Offer rewards!&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Do Not Eat The Microphone&lt;/em&gt; is titled after the expression meaning the&#xA;moment when the audience&amp;rsquo;s confidence in having its needs met is lost,&#xA;and people stop listening. How to avoid that? Berkun says, besides&#xA;following the more technical basics of good presentations, the key is&#xA;in thinking your talk through thoroughly. &amp;ldquo;All good public speaking is&#xA;based on good private thinking&amp;rdquo;. Berkun fights the myth of spontaneous&#xA;inspiration--good public speeches are the product of lots of work and&#xA;practice.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Of course you also need to get your deep thoughts across. Prepare&#xA;doing four things: 1. take a strong position in the title, 2. think&#xA;carefully about your audience, 3. make your points as concise as&#xA;possible, and 4. know likely counterarguments.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;The Science Of Not Boring People&lt;/em&gt; goes deeper into some techniques to&#xA;ensure keeping the audience with you. This highly useful chapter&#xA;covers pacing and rhythm, story telling, involving the audience, and&#xA;other subjects.  .&lt;/p&gt;&#xA;&#xA;&lt;p&gt;At some point you&amp;rsquo;ll have given a few presentations, and like in every&#xA;other field,&#xA;&lt;a href=&#34;/2011-02-06_review_talent_is_overrated.html&#34;&gt;feedback is the key to improve&lt;/a&gt;. Berkun gives tips on what questions to ask&#xA;your audience as well as on practicing by yourself at home.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;The Clutch Is Your Friend&lt;/em&gt; gives extra advice for lectures where the&#xA;goal is to actually teach the audience something, as opposed to, for&#xA;instance, merely giving an overview of a topic or a motivational&#xA;speech. The alternate title is &amp;ldquo;Why Teaching Is Almost Impossible&amp;rdquo;--in&#xA;Berkun&amp;rsquo;s view, given the difficulties in teaching a large group of&#xA;people effectively, you can only prepare and follow a few simple rules&#xA;and hope for the best. The rules: small numbers win, make it active&#xA;and interesting, and start with an insight that interests the&#xA;students.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With &lt;em&gt;Confessions&lt;/em&gt;, a great and funny chapter ends the book: Berkun&#xA;confesses some tricks he uses and some thoughts going through his mind&#xA;frequently when speaking. You learn that everything is allowed as long&#xA;as you capture your audience, and after all, &amp;ldquo;the easiest way to be&#xA;interesting is to be honest&amp;rdquo;. If you want to know if Berkun wears&#xA;underwear when giving a talk, read this chapter.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The book has several useful appendices with concise extra information,&#xA;such as How To Make A Point. Also, the references are great. To keep&#xA;in mind: Donald A. Bligh, &lt;em&gt;What&amp;rsquo;s the Use of Lectures&lt;/em&gt;, and Ken Bain,&#xA;&lt;em&gt;What the Best College Teachers Do&lt;/em&gt;.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;As I said before, a great book, recommended without hesitation.&lt;/p&gt;&#xA;</content>
   <category term="Books"></category>
   <category term="Presenting"></category>
  </entry>
  <entry>
   <title>&#34;Talent is Overrated&#34; by Geoff Colvin</title>
   <link href="http://www.thomaskappler.net/2011-02-06_review_talent_is_overrated.html" rel="alternate"></link>
   <updated>2011-02-06T00:00:00Z</updated>
   <id>tag:www.thomaskappler.net,2011-02-06:/2011-02-06_review_talent_is_overrated.html</id>
   <summary type="html">Fascinating and important. How top performers really get to be so great. Don&#39;t let a false notion of innate talent stop you.</summary>
   <content type="html">&lt;p&gt;Geoff Colvin&amp;rsquo;s&#xA;&lt;a href=&#34;http://www.amazon.com/Talent-Overrated-Separates-World-Class-Performers/dp/1591842948/ref=sr_1_1?ie=UTF8&amp;amp;qid=1297014218&amp;amp;sr=8-1&#34;&gt;Talent is Overrated&lt;/a&gt;&#xA;opens with presenting new research findings showing that top&#xA;performers do not have &amp;ldquo;innate gifts&amp;rdquo;. Instead, their achievements are&#xA;the result of lots of &lt;em&gt;deliberate practice&lt;/em&gt;. The author backs this&#xA;claim with different research findings and exemplary biographies, then&#xA;explains the nature of great performance and the kind of practice&#xA;necessary to achieve it, concluding with a chapter on motivation and&#xA;passion.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;I liked this book so much that I took extensive notes, which you find&#xA;below. Here&amp;rsquo;s the summary: I think it is an important work that might&#xA;change the way you think about personal and professional&#xA;development. From practice design to motivation and passion and the&#xA;nature of great performance, Colvin covers the subject from all angles&#xA;and backs his findings with lots of references.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Talent doesn&amp;rsquo;t exist? Really?&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;This is hard to believe when thinking of such prodigies as Einstein,&#xA;Mozart, or Michael Jordan. Colvin knows this and goes to great lengths&#xA;to present these studies and explain how, in his view, these top&#xA;performers really got to be so good. He walks the reader through the&#xA;childhoods of Mozart and Tiger Woods, and it&amp;rsquo;s indeed surprising what&#xA;we find here: an extreme practice regime starting at two years of age,&#xA;designed by an expert in the field, and tens of thousands of hours of&#xA;practice before both appeared in the public as masters of their&#xA;field. Whether they have/had innate talent or not, their success&#xA;certainly didn&amp;rsquo;t come easily. The author also presents a study showing&#xA;that while chess masters are incredibly good at remembering chess&#xA;boards, this only holds for boards with real, valid&#xA;positions. Presented with boards breaking the rules of chess, they do&#xA;no better than amateurs. Their memory must therefore be the result of&#xA;the years of chess training.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Colvin further points out the incredible progress that has occurred&#xA;across the board in the last hundred years even though our genes&#xA;didn&amp;rsquo;t change in such a short time. A 1908 Olympics record is today&amp;rsquo;s&#xA;top high school level.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Concluding his introduction, Colvin points out what an influence on&#xA;our lives the belief in innate talent has. Parents and teachers direct&#xA;kids to follow a course where they think they might have&#xA;talent. People themselves limit themselves and skip opportunities in&#xA;the belief to lack the necessary talent to go beyond the average.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Deliberate Practice&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;So what is this deliberate practice that leads to outstanding results,&#xA;while most people work for years without seeing much improvement? It&#xA;is designed, it can be (and is!) repeated a lot, it allows continuous&#xA;feedback, it is mentally highly demanding, and finally, it is not&#xA;fun--otherwise, quips Colvin, everyone would do it. If they knew how&#xA;to design such practice, that is.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The abovementioned attributes of deliberate practice show that it is&#xA;nothing like the actual work one is practicing for. This explains why&#xA;working in a job even for decades does not necessarily produce&#xA;masters.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;It is not quite clear whether a top performer can design her own&#xA;practice, or if she needs a coach who is an expert in training design&#xA;and can judge objectively. Tiger Woods, for instance, is still taking&#xA;lessons, while the Comedian Chris Rock designs and practices his&#xA;routines by himself.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;A pretty incredible story concludes this part of the book. Among the&#xA;first thinking about the design of a training regime to produce&#xA;world-class results was the Hungarian psychologist Laszlo Polgar. He&#xA;went all the way and found, via a newspaper add, a woman willing to&#xA;have children with him to raise in a way carefully designed to make&#xA;them word-class chess players. Surprisingly enough, he found one and&#xA;they had three girls--all of whom became grand masters after a&#xA;childhood of rigorous training.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Can we pin down a general effect of deliberate practice? What does it&#xA;do that other kinds of practice don&amp;rsquo;t do? For Colvin, it&amp;rsquo;s avoiding&#xA;automaticity. The brain tends to automate repeated activities to save&#xA;mental energy. This automation stops improvement. It also makes one&#xA;vulnerable to distractions because they break the pattern triggering&#xA;the automated routine. Instead, top performers remain conscious of&#xA;their activity throughout their training.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;How deliberate practice works&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;For Colvin, &amp;ldquo;perceiving more&amp;rdquo; is the key: more indicators, further&#xA;ahead, with less information. His chess example of the Big Blue&#xA;vs. Kasparov is a little doubtful, I felt he didn&amp;rsquo;t make clear the&#xA;difference in reasoning between the human player thinking in patterns&#xA;and the computer evaluating a large number of positions in advance.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Colving also points out here that knowledge plays an important&#xA;role. Experts have more and it&amp;rsquo;s better consolidated. Jeff Immelt,&#xA;then head of GE, launched a study showing that among his managers,&#xA;domain knowledge beat general management knowledge. This is old news&#xA;for developers suffering under non-technical IT management, so it&amp;rsquo;s&#xA;good that a business author like Colvin, who writes for Fortune in his&#xA;day job, points that out. The consolidation of knowledge affects&#xA;memory, too. No one can hold more than nine items in their mind&#xA;simultaneously (for most people it&amp;rsquo;s seven items), but the items can&#xA;be bigger. A chess amateur might remember a single position, while a&#xA;master remembers a whole board.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Applying the principles in our own lives&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;The author distinguishes three models of practice depending on the&#xA;kind of task to be practiced.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The music model: You know what you want to convey, like classical&#xA;music is written down, and one needs to convey it effectively. One can&#xA;break the task down into pieces and practice them independently, with&#xA;immediate feedback either by a coach or on video. A good addition is&#xA;to watch top performers and analyze what they are doing well, then&#xA;compare one&amp;rsquo;s own performance to theirs, repeating the process over&#xA;and over.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The chess model, known as the &amp;ldquo;case method&amp;rdquo; in the business world:&#xA;like chess players study individual moves from recorded games, one&#xA;studies lots of example problems. Ideally there is a known, but yet&#xA;hidden, solution, so that after deciding on an action, one can compare&#xA;one&amp;rsquo;s own choice with the known one, like a chess student would study&#xA;a master&amp;rsquo;s game. Of course, for practical problems it&amp;rsquo;s often not&#xA;clear what the solution is, if it even exists--it helps to discuss&#xA;with coaches and peers in that case.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The sports model: Sports is different from classical music in that no&#xA;two situations are ever exactly alike. One practices by working on&#xA;basic conditioning and skill development. Basic conditioning in sports&#xA;is strength and endurance training, and working on cognitive skills,&#xA;math and basic science in intellectual fields of work. Skill&#xA;development means practicing certain situations repeatedly, such as&#xA;sales calls.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Having this basic framework for thinking about practice, we need to&#xA;look at the practice itself. Colvin highlights three points that many&#xA;do not follow in their practice. First, there needs to be a clear goal&#xA;of what one wants to achieve, and what steps exactly will be necessary&#xA;to get there. Second, metacognition during training is crucial:&#xA;observing oneself to get a correct assessment of one&amp;rsquo;s mental&#xA;processes. Third, get as much specific feedback as possible and&#xA;analyze it.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Innovation and creativity&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;The combined impact of the internet and globalization leads to a&#xA;massive commoditization. To thrive in this environment, creativity and&#xA;innovation are key. Can we apply the principles of great performance&#xA;here?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Colvin doesn&amp;rsquo;t believe that creative works are the result of a flash&#xA;of insight. The evidence is conflicting. Colvin presents some&#xA;fascinating work of Dean Keith Simonton, John Hayes (CMU), and Howard&#xA;Gardner (&amp;ldquo;Creative Minds&amp;rdquo;). The summary is that &amp;ldquo;great innovators are&#xA;nourished by knowledge&amp;rdquo;; innovation grows from the past.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Great performance in youth and age&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;In this chapter, Colvin first examines what kinds of homes are&#xA;conducive for kids to achieving top performance, then looks into&#xA;maintaining top performance in old age.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This chapter didn&amp;rsquo;t work as well for me as the others. His opening&#xA;teaser of the average age of Nobel prize winners now being six years&#xA;older than 100 years ago seems obvious: as science advances, things&#xA;get more and more complex, requiring more study to understand what&amp;rsquo;s&#xA;been done before.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Colvin&amp;rsquo;s findings on the right kind of environment for children are&#xA;mainly based on Benjamin Bloom&amp;rsquo;s research, and seem plausible, but&#xA;remain too general. The environment must be child-oriented and&#xA;supportive. A strong work ethic based on the goals of excelling and&#xA;spending one&amp;rsquo;s time constructively is necessary.&lt;/p&gt;&#xA;&#xA;&lt;h2&gt;Where does the passion come from?&lt;/h2&gt;&#xA;&#xA;&lt;p&gt;The final chapter addresses the deepest question the book asks: why do&#xA;all that hard practice? Who does it and why, and why don&amp;rsquo;t the others&#xA;do the same?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Colvin first reviews the research on motivation, which agrees that&#xA;intrinsic beats extrinsic motivation by far. But how is intrinsic&#xA;motivation linked to deliberate practice? Possibly through &lt;em&gt;flow&lt;/em&gt;. To&#xA;experience flow, the difficulty level needs to be just&#xA;right. Repeating the same task or practice too often makes it too&#xA;easy, so top performers could be driven to setting the bar higher and&#xA;higher to keep the flow experience.  This I found very insightful and&#xA;exciting, since Csikszentmihalyi&amp;rsquo;s book&#xA;&lt;a href=&#34;http://www.amazon.com/Flow-Psychology-Experience-Mihaly-Csikszentmihalyi/dp/0061339202/ref=sr_1_1?ie=UTF8&amp;amp;qid=1297013636&amp;amp;sr=8-1&#34;&gt;Flow&lt;/a&gt;&#xA;is next on my reading list.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;However, it doesn&amp;rsquo;t explain why people put themselves through the&#xA;grueling practice required for the very top, including lots of&#xA;failure. The author leaves this point open, saying that we simply&#xA;don&amp;rsquo;t understand fully what&amp;rsquo;s behind motivation and passion. He adds&#xA;an interesting observation, though: examining the childhood&#xA;experiences of many top athletes, he found that their passion for&#xA;their sport wasn&amp;rsquo;t there from the start. It only developed after a few&#xA;years of practice, once they started to become really good.&lt;/p&gt;&#xA;</content>
   <category term="Books"></category>
   <category term="Personal Development"></category>
  </entry>
  <entry>
   <title>&#34;Leading Lean Software Development&#34; by Mary and Tom Poppendieck</title>
   <link href="http://www.thomaskappler.net/2011-01-05_review_leading_lean_software_development.html" rel="alternate"></link>
   <updated>2011-01-05T00:00:00Z</updated>
   <id>tag:www.thomaskappler.net,2011-01-05:/2011-01-05_review_leading_lean_software_development.html</id>
   <summary type="html">Insightful, clear and thought-provoking; though not a comprehensive hands-on guide.</summary>
   <content type="html">&lt;p&gt;A book on software development with the subtitle &lt;em&gt;Results are not the&#xA;point&lt;/em&gt;? Is that just attention-grabbing provocation or are the authors&#xA;on to something?&lt;/p&gt;&#xA;&#xA;&lt;p&gt;This is one of the first books on the management and organization of&#xA;software development that I read, so take the following notes with a&#xA;grain salt due to my lack of perspective.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;The Poppendiecks have been consulting on applying lean principles to&#xA;software development for years, and they have written on it before in&#xA;&lt;em&gt;Lean Software Development&lt;/em&gt; and &lt;em&gt;Implementing Lean Software&#xA;Development&lt;/em&gt; (see &lt;a href=&#34;http://www.poppendieck.com/&#34;&gt;their website&lt;/a&gt;).  The&#xA;&amp;ldquo;Leading &amp;hellip;&amp;rdquo; book builds on these two.  A colleague recommended and&#xA;lent this book to me, so I read it out of order.  That, and the fact&#xA;that I&amp;rsquo;m not familiar with the whole &amp;ldquo;lean&amp;rdquo; concept beyond some&#xA;rudimentary basics, made the book somewhat difficult to digest.  Each&#xA;chapter made sense to me, but my brain is still struggling to assemble&#xA;the content into a coherent whole.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Lacking the foundations of Lean, I had to look at the book at a&#xA;generic guide on best practices in management, organization, and&#xA;communication. Maybe that&amp;rsquo;s not a bad way of approaching such a book.&#xA;Its structure certainly makes sense from that point of view.  Six&#xA;chapters address major factors in successful product design and&#xA;delivery: Systems Thinking, Technical Excellence, Reliable Delivery,&#xA;Relentless Improvement, Great People, Aligned Leaders.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In the introduction, the authors note that since everyone sees the&#xA;world through a particular &amp;ldquo;frame&amp;rdquo;, different people and thus&#xA;organizations might see their surroundings in vastly different ways.&#xA;This limits the questions you ask and the alternatives you consider.&#xA;When things don&amp;rsquo;t work out, your frame of reference may have been off.&#xA;Building on this observation, the book&amp;rsquo;s chapters are composed of&#xA;frames, that is different views on the development process.&#xA;Real-world examples introduce and connect the frames.  This structure&#xA;allows the authors to focus on individual aspects of success while&#xA;keeping the full range of software projects in view.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;With 24 frames, the book packs a surprising amount of content into 250&#xA;pages. Fully summarizing it would be time-consuming and pointless--the&#xA;book itself is readable and without filler content. Nevertheless, a&#xA;few chapters or frames stood out for me.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;In Technical Excellence, the authors make a strong point for&#xA;emphasizing quality, for instance through test-driven development and&#xA;evolutionary iterations, and excellence, through valuing expertise&#xA;and avoiding the senseless &amp;ldquo;promotion&amp;rdquo; of the best developers to&#xA;managers. These points are not new to developers, but it&amp;rsquo;s great to&#xA;see them put forth so strongly in a management book.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Aligned Leaders contains several nuggets of insight into teams and&#xA;leadership that I found fascinating.  I&amp;rsquo;ve never lead a team larger&#xA;than two part-time programmers, so I&amp;rsquo;m sure someone with experience&#xA;would read these chapters through a different frame.  The authors&#xA;state that knowledge workers must necessarily be independent and&#xA;self-directed; if their job doesn&amp;rsquo;t allow that, they cannot do their&#xA;best work.  Therefore, the role of a manager can only be to set the&#xA;tone and to otherwise focus on &lt;em&gt;making people better&lt;/em&gt;--through caring,&#xA;respect, and coaching.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;Overall, the book impressed me with its combination of insightful&#xA;content, clear and natural writing, and constant referral to&#xA;real-world examples.  You might want to start with the authors&amp;rsquo;&#xA;introductory &lt;em&gt;Lean Software Development&lt;/em&gt;, though, to better understand&#xA;the underlying ideas.&lt;/p&gt;&#xA;&#xA;&lt;p&gt;&lt;em&gt;Leading Lean Software Development&lt;/em&gt; by Mary and Tom&#xA;Poppendieck. Addison-Wesley, 2010.&lt;/p&gt;&#xA;</content>
   <category term="Books"></category>
  </entry>
 </feed>