<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0">
  <channel>
    <title>Thomas Kappler</title>
    <link>/2011-01-05_review leading lean software development.rss</link>
    <description>Thomas Kappler's personal/programming site.</description>
    <language>en</language>
    <docs>http://blogs.law.harvard.edu/tech/rss</docs>
    <generator>blosxom/2.1.2</generator>

  <item>
    <title>Book: Leading Lean Software Development by Mary and Tom Poppendieck</title>
    <pubDate>Sun, 06 Mar 2011 18:39:00 +0100</pubDate>
    <link>/2011/03/06#2011-01-05_review%20leading%20lean%20software%20development</link>
    <category></category>
    <guid isPermaLink="false">/2011-01-05_review%20leading%20lean%20software%20development</guid>
    <description>&lt;p&gt;A book on software development with the subtitle &lt;em&gt;Results are not the
point&lt;/em&gt;? Is that just attention-grabbing provocation or are the authors
on to something?&lt;/p&gt;

&lt;p&gt;This is one of the first books on the management and organization of
software development that I read, so take the following notes with a
grain salt due to my lack of perspective.&lt;/p&gt;

&lt;p&gt;The Poppendiecks have been consulting on applying lean principles to
software development for years, and they have written on it before in
&lt;em&gt;Lean Software Development&lt;/em&gt; and &lt;em&gt;Implementing Lean Software
Development&lt;/em&gt; (see &lt;a href=&quot;http://www.poppendieck.com/&quot;&gt;their website&lt;/a&gt;).  The
&amp;#8220;Leading &amp;#8230;&amp;#8221; book builds on these two.  A colleague recommended and
lent this book to me, so I read it out of order.  That, and the fact
that I&amp;#8217;m not familiar with the whole &amp;#8220;lean&amp;#8221; concept beyond some
rudimentary basics, made the book somewhat difficult to digest.  Each
chapter made sense to me, but my brain is still struggling to assemble
the content into a coherent whole.&lt;/p&gt;

&lt;p&gt;Lacking the foundations of Lean, I had to look at the book at a
generic guide on best practices in management, organization, and
communication. Maybe that&amp;#8217;s not a bad way of approaching such a book.
Its structure certainly makes sense from that point of view.  Six
chapters address major factors in successful product design and
delivery: Systems Thinking, Technical Excellence, Reliable Delivery,
Relentless Improvement, Great People, Aligned Leaders.&lt;/p&gt;

&lt;p&gt;In the introduction, the authors note that since everyone sees the
world through a particular &amp;#8220;frame&amp;#8221;, different people and thus
organizations might see their surroundings in vastly different ways.
This limits the questions you ask and the alternatives you consider.
When things don&amp;#8217;t work out, your frame of reference may have been off.
Building on this observation, the book&amp;#8217;s chapters are composed of
frames, that is different views on the development process.
Real-world examples introduce and connect the frames.  This structure
allows the authors to focus on individual aspects of success while
keeping the full range of software projects in view.&lt;/p&gt;

&lt;p&gt;With 24 frames, the book packs a surprising amount of content into 250
pages. Fully summarizing it would be time-consuming and
pointless&amp;#8212;-the book itself is readable and without filler
content. Nevertheless, a few chapters or frames stood out for me.&lt;/p&gt;

&lt;p&gt;In Technical Excellence, the authors make a strong point for
emphasizing quality, for instance through test-driven development and
evolutionary iterations, and excellence, through valuing expertise
and avoiding the senseless &amp;#8220;promotion&amp;#8221; of the best developers to
managers. These points are not new to developers, but it&amp;#8217;s great to
see them put forth so strongly in a management book.&lt;/p&gt;

&lt;p&gt;Aligned Leaders contains several nuggets of insight into teams and
leadership that I found fascinating.  I&amp;#8217;ve never lead a team larger
than two part-time programmers, so I&amp;#8217;m sure someone with experience
would read these chapters through a different frame.  The authors
state that knowledge workers must necessarily be independent and
self-directed; if their job doesn&amp;#8217;t allow that, they cannot do their
best work.  Therefore, the role of a manager can only be to set the
tone and to otherwise focus on &lt;em&gt;making people better&lt;/em&gt;&amp;#8212;-through
caring, respect, and coaching.&lt;/p&gt;

&lt;p&gt;Overall, the book impressed me with its combination of insightful
content, clear and natural writing, and constant referral to
real-world examples.  You might want to start with the authors&amp;#8217;
introductory &lt;em&gt;Lean Software Development&lt;/em&gt;, though, to better understand
the underlying ideas.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;Leading Lean Software Development&lt;/em&gt; by Mary and Tom
Poppendieck. Addison-Wesley, 2010.&lt;/p&gt;
</description>
  </item>
  </channel>
</rss>
